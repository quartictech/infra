apiVersion: v1
data:
  start.sh: |
    mkdir /var/run/sshd
    python3 /setup/add-keys.py $USER
    groupadd -g 1337 diskwriters
    usermod -aG diskwriters jovyan
    chmod -R g+rwx /home/jovyan/work
    /usr/sbin/sshd -D
  add-keys.py: |
    #!/bin/python
    import requests
    import sys
    keys = requests.get("https://api.github.com/users/{}/keys".format(sys.argv[1])).json()
    keysf = open("/home/jovyan/.ssh/authorized_keys", "w")
    for key in keys:
      print(key["key"], file=keysf)
kind: ConfigMap
metadata:
  name: jupyter-scripts
  namespace: analysis
---
apiVersion: v1
kind: Service
metadata:
  name: jupyter-{{environment.user}}
  namespace: analysis
  labels:
    component: jupyter-{{environment.user}}
spec:
  ports:
  - port: 22
    protocol: TCP
    name: default
  selector:
    component: jupyter-{{environment.user}}
---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: jupyter-{{environment.user}}
  namespace: analysis
spec:
  serviceName: jupyter-{{environment.user}}
  replicas: 1
  template:
    metadata:
      labels:
        component: jupyter-{{environment.user}}
    spec:
      containers:
        - name: jupyter
          image: eu.gcr.io/quartictech/jupyter:50
          ports:
            - containerPort: 22
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              cpu: 2
          command: ["sh", "/setup/start.sh"]
          env:
            - name: JUPYTER_GOOGLE_CLOUD_BUCKET
              value: quartictech/jupyter
            - name: USER
              value: {{environment.user}}
          volumeMounts:
            - name: config-volume
              mountPath: /setup
            - name: work
              mountPath: /home/jovyan/work
      securityContext:
        fsGroup: 1337
      volumes:
        - name: config-volume
          configMap:
            name: jupyter-scripts
  volumeClaimTemplates:
  - metadata:
      name: work
      annotations:
        volume.beta.kubernetes.io/storage-class: user-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi