apiVersion: v1
data:
  howl.yml: |
    namespaces:
    {% for customer in customers %}
    {% if customers[customer].namespace %}
      {{customer|indent(6)}}:
        {{customers[customer].namespace|indent(8)}}
    {% endif %}
    {% endfor %}

    server:
      applicationContextPath: /
      applicationConnectors:
        - type: http
          port: 8120
      adminConnectors:
        - type: http
          port: 8121
kind: ConfigMap
metadata:
  namespace: platform
  name: howl-config
---
apiVersion: v1
kind: Service
metadata:
  name: howl
  namespace: platform
  labels:
    component: howl
  annotations:
    quartic.io/healthcheck_path: /healthcheck
    quartic.io/healthcheck_port: "8121"
spec:
  ports:
  - port: 8120
    protocol: TCP
    name: default
  - port: 8121
    protocol: TCP
    name: admin
  selector:
    component: howl
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: howl
  namespace: platform
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: howl
    spec:
      containers:
        - name: howl
          image: eu.gcr.io/quartictech/howl:{{cluster.platform_version}}
          ports:
            - containerPort: 8120
            - containerPort: 8121
          volumeMounts:
            - name: config
              mountPath: /howl-application-{{cluster.platform_version}}/howl.yml
              subPath: howl.yml
          env:
            - name: ENABLE_METRICS
            - name: INFLUX_HOST
              value: influxdb.core
            - name: INFLUX_PORT
              value: "8086"
            - name: INFLUX_DB
              value: k8s
            - name: INFLUX_AUTH
              value: root:root
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              cpu: 100m
      volumes:
        - name: "config"
          configMap:
            name: "howl-config"