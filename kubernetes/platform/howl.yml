apiVersion: v1
data:
  config.yml: |
    aws:
      region: {{cluster.aws.region}}
      accessKeyId: {{cluster.aws.access_key_id}}
      secretAccessKeyEncrypted: {{cluster.secrets.aws_secret_access_key}}

    namespaces:
    {% for customer in customers %}
    {% if customers[customer].namespace %}
      {{customer|indent(6)}}:
        {{customers[customer].namespace|indent(8)}}
    {% endif %}
    {% endfor %}

    url:
      port: 8120

kind: ConfigMap
metadata:
  namespace: platform
  name: howl-config
---
apiVersion: v1
kind: Service
metadata:
  name: howl
  namespace: platform
  labels:
    component: howl
  annotations:
    quartic.io/healthcheck_path: /healthcheck
    quartic.io/healthcheck_port: "8121"
spec:
  ports:
  - port: 8120
    protocol: TCP
    name: default
  - port: 8121
    protocol: TCP
    name: admin
  selector:
    component: howl
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: howl
  namespace: platform
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: howl
    spec:
      containers:
        - name: howl
          image: eu.gcr.io/quartictech/howl:{{cluster.platform_version}}
          ports:
            - containerPort: 8120
            - containerPort: 8121
          env:
            - name: MASTER_KEY_BASE64
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: master_key_base64
          volumeMounts:
            - name: config
              mountPath: /service/config.yml
              subPath: config.yml
          resources:
            requests:
              cpu: 100m
      volumes:
        - name: "config"
          configMap:
            name: "howl-config"