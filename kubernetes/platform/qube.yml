apiVersion: v1
data:
  config.yml: |
    kubernetes:
      enable: true
      namespace: qube
      numConcurrentJobs: 4
      maxFailures: 5
      creationTimeoutSeconds: 60
      runTimeoutSeconds: 3600
      backChannelEndpoint: "http://qube.platform:8200/api/backchannel/%s"
      template:
        apiVersion: batch/v1
        kind: Job
        spec:
          template:
            spec:
              automountServiceAccountToken: false
              containers:
                - name: jupyter
                  image: eu.gcr.io/quartictech/jupyter:53
                  command:
                    - "sudo"
                    - "-E"
                    - "-u"
                    - "jovyan"
                    - "bash"
                    - "-c"
                    - "export PATH=/opt/conda/bin:$PATH; pip install $QUARTIC_RUNNER_ENDPOINT && python -u -m quarty"
              restartPolicy: Never

    registryUrl: http://registry:8190/api

    github:
      appId: 3853
      apiRootUrl: https://api.github.com
      privateKeyEncrypted: {{cluster.secrets.github_private_key}}

    database:
      runEmbedded: false
      dataSource:
        hostName: postgres.platform
        user: postgres
        password: {{cluster.secrets.postgres_password}}

    url:
      port: 8200

   
kind: ConfigMap
metadata:
  namespace: platform
  name: qube-config
---
apiVersion: v1
kind: Service
metadata:
  name: qube
  namespace: platform
  labels:
    component: qube
  annotations:
    quartic.io/healthcheck_path: /healthcheck
    quartic.io/healthcheck_port: "8201"
spec:
  ports:
  - port: 8200
    protocol: TCP
    name: default
  - port: 8201
    protocol: TCP
    name: admin
  selector:
    component: qube
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: qube
  namespace: platform
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: qube
    spec:
      containers:
        - name: qube
          image: eu.gcr.io/quartictech/qube:{{cluster.platform_version}}
          ports:
            - containerPort: 8200
            - containerPort: 8201
          env:
            - name: MASTER_KEY_BASE64
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: master_key_base64
          volumeMounts:
            - name: config
              mountPath: /service/config.yml
              subPath: config.yml
          resources:
            requests:
              cpu: 100m
      volumes:
        - name: "config"
          configMap:
            name: "qube-config"