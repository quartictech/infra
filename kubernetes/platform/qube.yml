apiVersion: v1
data:
  config.yml: |
    kubernetes:
      enable: true
      namespace: qube
      numConcurrentJobs: 4
      jobTimeoutSeconds: 3600
      deletePods: false
      podTemplate:
        spec:
          automountServiceAccountToken: false
          containers:
            - name: container
          restartPolicy: Never

    database:
      runEmbedded: false
      dataSource:
        hostName: postgres.platform
        databaseName: qube
        user: postgres
        password: {{cluster.secrets.postgres_password}}

    websocketPort: 8202
    url:
      port: 8200
   
kind: ConfigMap
metadata:
  namespace: platform
  name: qube-config
---
apiVersion: v1
kind: Service
metadata:
  name: qube
  namespace: platform
  labels:
    component: qube
  annotations:
    quartic.io/healthcheck_path: /healthcheck
    quartic.io/healthcheck_port: "8201"
spec:
  ports:
  - port: 8200
    protocol: TCP
    name: default
  - port: 8201
    protocol: TCP
    name: admin
  - port: 8202
    protocol: TCP
    name: websocket
  selector:
    component: qube
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: qube
  namespace: platform
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: qube
    spec:
      containers:
        - name: qube
          image: eu.gcr.io/quartictech/qube:{{cluster.platform_version}}
          ports:
            - containerPort: 8200
            - containerPort: 8201
            - containerPort: 8202
          env:
            - name: MASTER_KEY_BASE64
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: master_key_base64
          volumeMounts:
            - name: config
              mountPath: /service/config.yml
              subPath: config.yml
          resources:
            requests:
              cpu: 100m
      volumes:
        - name: "config"
          configMap:
            name: "qube-config"