apiVersion: v1
data:
  config.yml: |
    registry_url: http://registry:8190/api
    catalogue_url: "http://catalogue:8090/api"
    howl_url: "http://howl:8120/api"
    hey_url: http://hey/
    home_url_format: "https://%s.{{cluster.gcloud.domain_name}}"

    qube:
      url: ws://qube:8202
      pod:
        containers:
          - name: quarty
            image: {{cluster.gcloud.docker_repository}}/jupyter:{{cluster.jupyter.version}}
            command:
              - "sudo"
              - "-E"
              - "-u"
              - "jovyan"
              - "bash"
              - "-c"
              - | 
                set -eu 
                export PATH=/opt/conda/bin:$PATH 
                pip install --upgrade git+git://github.com/quartictech/quartic-python.git@{{cluster.quartic_python_version}}
                pip install http://qube.platform:8200/api/backchannel/runner
                python -u -m quarty.server

            port: 8080
            env:
              # TODO: "This is clearly noob" - OC
              MYSQL_ROOT_PASSWORD: aiCh7Yie
          - name: mysql
            image: mysql
            port: 3306
            env:
              MYSQL_ROOT_PASSWORD: aiCh7Yie

    github:
      app_id: {{cluster.github.app_id}}
      api_root_url: https://api.github.com
      private_key_encrypted: {{cluster.github.private_key_encrypted}}

    database:
      host_name: postgres.platform
      database_name: eval
      user: postgres
      password: {{cluster.postgres.password_encrypted}}

    auth:
      time_to_live_seconds: 3600
      signing_key_encrypted_base64: {{cluster.token_signing_key_encrypted}}

    url:
      port: 8210
   
kind: ConfigMap
metadata:
  namespace: platform
  name: eval-config
---
apiVersion: v1
kind: Service
metadata:
  name: eval
  namespace: platform
  labels:
    component: eval
  annotations:
    quartic.io/healthcheck_path: /healthcheck
    quartic.io/healthcheck_port: "8211"
spec:
  ports:
  - port: 8210
    protocol: TCP
    name: default
  - port: 8211
    protocol: TCP
    name: admin
  selector:
    component: eval
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: eval
  namespace: platform
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: eval
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: core
      containers:
        - name: eval
          image: {{cluster.gcloud.docker_repository}}/eval:{{cluster.platform_version}}
          ports:
            - containerPort: 8210
            - containerPort: 8211
          env:
            - name: MASTER_KEY_BASE64
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: master_key_base64
          volumeMounts:
            - name: config
              mountPath: /service/config.yml
              subPath: config.yml
          resources:
            requests:
              cpu: 100m
      volumes:
        - name: "config"
          configMap:
            name: "eval-config"