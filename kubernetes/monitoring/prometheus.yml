apiVersion: v1
data:
  alert.rules: |
    ALERT service_down
      IF up == 0

    ALERT high_load
      IF node_load1 > 0.5
      ANNOTATIONS {
          summary = "Instance {{ $labels.instance }} under high load",
          description = "{{ $labels.instance }} of job {{ $labels.job }} is under high load.",
      }
  prometheus.yml: |
    # my global config
    global:
      scrape_interval:     15s # By default, scrape targets every 15 seconds.
      evaluation_interval: 15s # By default, scrape targets every 15 seconds.
      # scrape_timeout is set to the global default (10s).

      # Attach these labels to any time series or alerts when communicating with
      # external systems (federation, remote storage, Alertmanager).
      external_labels:
          monitor: 'platform'

    # Load and evaluate rules in this file every 'evaluation_interval' seconds.
    rule_files:
      - "alert.rules"
      # - "first.rules"
      # - "second.rules"

    # A scrape configuration containing exactly one endpoint to scrape:
    # Here it's Prometheus itself.
    scrape_configs:
      # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
      - job_name: 'prometheus'

        # Override the global default and scrape targets from this job every 5 seconds.
        scrape_interval: 5s

        # metrics_path defaults to '/metrics'
        # scheme defaults to 'http'.

        static_configs:
             - targets: ['localhost:9090']
      - job_name: 'services'
        scrape_interval: 5s
        metrics_path: '/healthcheck'
        static_configs:
            - targets: ['weyl:8081', 'catalogue:8091']
kind: ConfigMap
metadata:
  namespace: platform
  name: prometheus-config
---
apiVersion: v1
data:
  config.yml: |-
    route:
        receiver: 'slack'

    receivers:
        - name: 'slack'
          slack_configs:
              - send_resolved: true
                username: '<username>'
                channel: '#<channel-name>'
                api_url: '<incomming-webhook-url>'
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: alertmanager-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: platform
  labels:
    component: prometheus
spec:
  type: NodePort
  ports:
  - port: 9090
    protocol: TCP
  selector:
    component: prometheus
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: prometheus
  namespace: platform
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - '-config.file=/etc/prometheus/prometheus.yml'
            - '-storage.local.path=/prometheus'
            - '-alertmanager.url=http://alertmanager:9093'
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
            - name: data
              mountPath: /prometheus
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
        - name: data
          emptyDir: {}
