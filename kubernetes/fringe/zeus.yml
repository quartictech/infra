{% for stack_name, stack_details in cluster.fringe.stacks.items() %}
---
apiVersion: v1
kind: Service
metadata:
  name: zeus-{{stack_name}}
  namespace: fringe
  labels:
    component: zeus
  annotations:
    quartic.io/healthcheck_path: /healthcheck
    quartic.io/healthcheck_port: "8161"
spec:
  ports:
  - port: 80
    protocol: TCP
    name: frontend
  - port: 8160
    protocol: TCP
    name: default
  - port: 8161
    protocol: TCP
    name: admin
  selector:
    component: zeus-{{stack_name}}
---
apiVersion: v1
data:
  config.yml: |
    datasets:
      {{stack_details.zeus.datasets | indent(6)}}
    url:
      port: 8160
kind: ConfigMap
metadata:
  namespace: fringe
  name: zeus-config-{{stack_name}}
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: zeus-{{stack_name}}
  namespace: fringe
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: zeus-{{stack_name}}
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: default-pool
      containers:
        - name: zeus-frontend
          image: eu.gcr.io/quartictech/zeus-frontend:{{cluster.platform_version}}
          ports:
            - containerPort: 80
        - name: zeus
          image: eu.gcr.io/quartictech/zeus:{{cluster.platform_version}}
          ports:
            - containerPort: 8160
            - containerPort: 8161
          env:
            - name: MASTER_KEY_BASE64
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: master_key_base64
            - name: JAVA_OPTS
              value: -Xmx1g
          volumeMounts:
            - name: config
              mountPath: /service/config.yml
              subPath: config.yml
      volumes:
        - name: "config"
          configMap:
            name: "zeus-config-{{stack_name}}"
{% endfor %}