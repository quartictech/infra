apiVersion: v1
kind: Service
metadata:
  name: dilectic
  namespace: dilectic
  labels:
    component: dilectic
spec:
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP
  selector:
    component: dilectic
---
apiVersion: v1
data:
  install.sh: |
    set -e
    ls /etc/secret
    apt-get update && apt-get install -y curl apt-transport-https
    export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
    echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | tee /etc/apt/sources.list.d/google-cloud-sdk.list
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    apt-get update && apt-get install -y google-cloud-sdk
    chmod 400 /etc/secret/id_rsa
    GIT_SSH_COMMAND='ssh -o "StrictHostKeyChecking no" -i /etc/secret/id_rsa' git clone git@github.com:quartictech/dilectic.git
    ln -s /dilectic/integration
    cp /integration/config.yml.example /integration/config.yml
    sed -i.bak 's/host: localhost/host: postgres/g' /integration/config.yml
    mkdir -p /data/derived /data/raw
    gsutil -m rsync -r gs://quartic-dilectic/raw-data /data/raw
    /integration/integrations.sh
    tail -f /dev/null
kind: ConfigMap
metadata:
  name: data-worker-config
  namespace: dilectic
---
apiVersion: v1
data:
  default.conf: |
    server {
        listen       80;
        server_name  localhost;

        location ~ /\. {
            deny all;
        }

        # Static files
        location /datasets {
            alias /datasets;
            try_files $uri $uri/ =404;
        }

        location /tayo {
            proxy_pass            http://tayo:8080;
            proxy_http_version    1.1;
            proxy_set_header      Upgrade $http_upgrade;
            proxy_set_header      Connection "upgrade";

            proxy_connect_timeout 1h;
            proxy_send_timeout    1h;
            proxy_read_timeout    1h;
        }

        location /tracker {
            proxy_pass            http://tracker:8080;
            proxy_http_version    1.1;
            proxy_set_header      Upgrade $http_upgrade;
            proxy_set_header      Connection "upgrade";

            proxy_connect_timeout 1h;
            proxy_send_timeout    1h;
            proxy_read_timeout    1h;
        }

        location /_status {
            return 200 'gangnam style!';
        }
    }
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: dilectic
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: dilectic-deployment
  namespace: dilectic
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: dilectic
    spec:
      containers:
        - name: data-worker
          image: eu.gcr.io/quartictech/data-worker:0.2.0-47-g7bd5889
          command: ["sh", "/setup/install.sh"]
          volumeMounts:
            - name: shared-data
              mountPath: /data
            - name: config-volume
              mountPath: /setup
            - name: deploy-key
              mountPath: /etc/secret
        - name: nginx
          image: nginx
          volumeMounts:
            - name: shared-data
              mountPath: /datasets
            - name: nginx-config-volume
              mountPath: /etc/nginx/conf.d
          ports:
            - containerPort: 80
      volumes:
        - name: shared-data
          emptyDir: {}
        - name: config-volume
          configMap:
            name: data-worker-config
        - name: nginx-config-volume
          configMap:
            name: nginx-config
        - name: deploy-key
          secret:
            secretName: deploy-key
